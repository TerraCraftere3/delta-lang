; Generated by Delta Compiler
; Input File: example.dlt
; llc Arguments: -filetype=obj
; ModuleID = 'delta_program'
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

; External function declarations
declare void @exit(i32)
declare void @free(i8*)
declare i8* @malloc(i64)
declare i32 @printf(i8*)
declare i8* @strcpy(i8*, i8*)
declare i64 @strlen(i8*)

define i32 @main() {
entry:
  %t0 = alloca i8*, align 8; Allocate variable "str"
  %t1 = sext i32 16 to i64 ; Int Sign Extend
  %t2 = call i8* @malloc(i64 %t1) ; Call malloc()
  store i8* %t2, i8** %t0, align 8; Set variable "str"
  %t3 = load i8*, i8** %t0, align 8 ; Use Variable str
  %t4 = trunc i32 72 to i8 ; Int Truncate
  store i8 %t4, i8* %t3, align 1 ; Store through pointer
  %t5 = load i8*, i8** %t0, align 8 ; Use Variable str
  %t6 = call i32 @printf(i8* %t5) ; Call printf()
  %t7 = load i8*, i8** %t0, align 8 ; Use Variable str
  %t8 = bitcast i8* %t7 to i8* ; Pointer cast
  call void @free(i8* %t8) ; Call free()
  ret i32 0 ; Return
  ret i32 0
}

