; Generated by Delta Compiler
; Input File: example.dlt
; llc Arguments: -filetype=obj
; ModuleID = 'delta_program'
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc"

; External function declarations
declare void @exit(i32)
declare void @free(i64)
declare i64 @malloc(i64)
declare i32 @printf(i64)

define i64 @fib(i32 %n) {
entry:
  %t0 = alloca i32, align 4
  store i32 %n, i32* %t0, align 4
  %t1 = load i32, i32* %t0, align 4
  %t2 = icmp sle i32 %t1, 1
  %t3 = zext i1 %t2 to i32
  %t4 = icmp ne i32 %t3, 0
  br i1 %t4, label %bb0, label %bb1

bb0:
  %t5 = load i32, i32* %t0, align 4
  ret i64 %t5
  br label %bb1

bb1:
  %t6 = load i32, i32* %t0, align 4
  %t7 = sub i32 %t6, 1
  %t8 = call i64 @fib(i32 %t7)
  %t9 = load i32, i32* %t0, align 4
  %t10 = sub i32 %t9, 2
  %t11 = call i64 @fib(i32 %t10)
  %t12 = add i64 %t8, %t11
  ret i64 %t12
  ret i64 0
}

define i32 @main() {
entry:
  %t0 = call i64 @fib(i32 10)
  ret i32 %t0
  ret i32 0
}

