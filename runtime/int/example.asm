; Generated by Delta Compiler
; Input File: example.dlt
; Nasm Arguments: -f win64
; Link Arguments: /subsystem:console /entry:_start /defaultlib:kernel32.lib /defaultlib:msvcrt.lib
global _start
extern ExitProcess
; External function declarations
; kernel32 imports
extern CloseHandle
extern CreateFileA
extern ExitProcess
extern FormatMessageA
extern GetConsoleMode
extern GetLastError
extern GetLocalTime
extern GetProcessHeap
extern GetStdHandle
extern GetSystemTime
extern HeapAlloc
extern HeapFree
extern ReadConsoleA
extern ReadFile
extern SetConsoleMode
extern Sleep
extern VirtualAlloc
extern VirtualFree
extern WriteConsoleA
extern WriteFile
; msvcrt imports
extern free
extern malloc
extern memcpy
extern memset
extern printf
extern scanf
extern strcmp
extern strcpy
extern strlen


section .text
main:
; Begin Function main
	push rbp
	mov rbp, rsp
; Begin Scope 1
; let int64 handle
; call GetStdHandle
	mov eax, 11
	push rax
	mov eax, 0
	push rax
	pop rax
	pop rbx
	sub eax, ebx
	push rax
	pop rcx
	sub rsp, 8 ; Align stack for Windows ABI
	call GetStdHandle
	add rsp, 8 ; Restore stack after call
	push rax
; /call GetStdHandle
; /let int64
; return
	mov eax, 0
	push rax
	pop rax
	mov rsp, rbp
	pop rbp
	ret
; /return
	add rsp, 8 ; Clean up 1 variable (8 bytes)
; End Scope 1
	mov rax, 0
	mov rsp, rbp
	pop rbp
	ret
; End Function

_start:
	sub rsp, 8 ; Align stack for Windows ABI
	call main
	add rsp, 8 ; Restore stack after call
	mov rcx, rax
	sub rsp, 8 ; Align stack for Windows ABI
	call ExitProcess
	add rsp, 8 ; Restore stack after call
