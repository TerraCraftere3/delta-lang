; Generated by Delta Compiler
; Input File: example.dlt
; Nasm Arguments: -f win64
; Link Arguments: /subsystem:console /entry:_start /defaultlib:kernel32.lib /defaultlib:msvcrt.lib
global _start
extern ExitProcess
global add

section .text
add:
; Begin Function add
	push rbp
	mov rbp, rsp
	push rcx
	push rdx
; Begin Scope 1
; return
	mov rax, QWORD [rsp+0]
	push rax
	mov rax, QWORD [rsp+16]
	push rax
	pop rax
	pop rbx
	add rax, rbx
	push rax
	pop rax
	mov rsp, rbp
	pop rbp
	ret
; /return
; End Scope 1
	mov rax, 0
	mov rsp, rbp
	pop rbp
	ret
	add rsp, 16 ; Clean up function variables
; End Function

main:
; Begin Function main
	push rbp
	mov rbp, rsp
; Begin Scope 1
; return
; call add
	mov eax, 3
	push rax
	mov eax, 5
	push rax
	pop rcx
	pop rdx
	sub rsp, 8 ; Align stack for Windows ABI
	call add
	add rsp, 8 ; Restore stack after call
	push rax
; /call add
	pop rax
	mov rsp, rbp
	pop rbp
	ret
; /return
; End Scope 1
	mov rax, 0
	mov rsp, rbp
	pop rbp
	ret
; End Function

_start:
	sub rsp, 8 ; Align stack for Windows ABI
	call main
	add rsp, 8 ; Restore stack after call
	mov rcx, rax
	sub rsp, 8 ; Align stack for Windows ABI
	call ExitProcess
	add rsp, 8 ; Restore stack after call
